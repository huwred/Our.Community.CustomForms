@inherits Umbraco.Cms.Web.Common.Views.UmbracoViewPage<Umbraco.Cms.Core.Models.Blocks.BlockGridItem>
@using ContentModels = Umbraco.Cms.Web.Common.PublishedModels;
@{
    Layout = "_Layout_Features.cshtml";

    string id = Model.Settings.Value<string>("formControlId").Replace(" ", "-", StringComparison.InvariantCulture);
    string name = Model.Settings.Value<string>("formControlId").Replace(" ", "", StringComparison.InvariantCulture);
    string required = Model.Settings.Value<bool>("formControlRequired") ? "required" : "";
    var extraClass = Model.Settings.Value<string>("formControlClass");
    var errMessage = Model.Settings.Value<string>("formControlErrorMessage");
    var label = Model.Settings.Value<string>("formControlLabel");
    string ariaId = "help_" + name;

    var field = Model.Content;
    var hasValidator = !string.IsNullOrWhiteSpace(field.Value<string>("formControlPattern"));
    var pattern = field.Value<string>("formControlPattern");
    var inputtype = field.Value<string>("formControlType");

    var placeholder = field.Value<string>("formControlPlaceholder");
    var helptext = field.Value<string>("formControlHelpText");

    var maxlen = field.Value<int>("formControlMax") > 0 ? $@"maxlength=""{field.Value<int>("formControlMax")}""" : "";
    var minlen = field.Value<int>("formControlMin") > 0 ? $@"minlength=""{field.Value<int>("formControlMin")}""" : "";
    string max = field.Value<int>("formControlMax") > 0 ? $@"max=""{field.Value<int>("formControlMax")}""" : "";
    string min = field.Value<int>("formControlMin") > 0 ? $@"min=""{field.Value<int>("formControlMin")}""" : "";

    var dir = field.Value<string>("formControlLayout") == "Vertical" ? "" : "form-check-inline";
    string switchclass = "";
    if (field.Value<bool>("FormControlAsSwitch"))
    {
        switchclass = "form-switch";
    }
}
<!-- if the checkbox is required and it is a single item, then render it as two radio buttons!? -->
@if (Model.Settings.Value<bool>("formControlRequired"))
{
    <div class="mb-2 mt-1">
        <label for="@id" class="form-label mr-2">@label</label>
        @{
            int i = 0;

            foreach (var block in field.Value<Umbraco.Cms.Core.Models.Blocks.BlockListModel>("formControlItems"))
            {
                var rId = id + $"_{i++}";
                var data = block.Content;
                <div class="form-check @switchclass @dir @extraClass">
                    <input aria-describedby="@ariaId" class="form-check-input" type="radio" name="@name" id="@rId" value="@data.Value("itemValue")" @required>
                    <label class="form-check-label" for="@rId">@data.Value("itemKey")y</label>
                </div>
            }
        }
        <small id="@ariaId" class="form-text text-muted" our-if="!string.IsNullOrWhiteSpace(helptext)">@helptext</small>
        <div class="invalid-feedback">@errMessage</div>
    </div>
}
else
{
    <div class="mb-2 mt-1">
        <label for="@id" class="form-label mr-2">@label</label>
        @{
            int ii = 0;

            foreach (var block in field.Value<Umbraco.Cms.Core.Models.Blocks.BlockListModel>("formControlItems"))
            {
                var rId = id + $"_{ii++}";
                var data = block.Content;
                <div class="form-check @switchclass @dir @extraClass">
                    <input aria-describedby="@ariaId" class="form-check-input" type="checkbox" name="@name" id="@rId" value="@data.Value("itemValue")" @required>
                    <label class="form-check-label" for="@rId">@data.Value("itemKey")</label>
                </div>
            }
        }
        <small id="@ariaId" class="form-text text-muted" our-if="!string.IsNullOrWhiteSpace(helptext)">@helptext</small>
        <div class="invalid-feedback">@errMessage</div>
    </div>
}


